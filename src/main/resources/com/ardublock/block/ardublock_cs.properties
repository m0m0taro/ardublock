#X-Generator: crowdin.com
bc.start=Start
bg.repeat_control.description=Zopakujte p\u0159\u00edkazy s "prom\u011bnn\u00e1" rozmez\u00ed mezi "start" a "stop" hodnoty. "prom\u011bnn\u00e1" m\u011bn\u00ed "Inkrement" po ka\u017ed\u00e9m opakov\u00e1n\u00ed
bc.end=Stop
bc.increment=kroky
bg.constrain=omezit
bc.low=men\u0161\u00ed
bc.high=v\u011bt\u0161\u00ed
bg.sd_write2=zapsat do SD
bg.sd_write=SD flash z\u00e1pis
bg.sd_write_number=SD zapsat \u010d\u00edslo
bg.sd_write_number_int=SD zapsat \u010d\u00edslo Int
bg.sd_return=N\u00e1vrat
bg.sd_no_return=Bez n\u00e1vratu
bg.eeprom_read=p\u0159e\u010d\u00edst bajt z pam\u011bti EEPROM
bg.eeprom_write=zapsat bajt do EEPROM
bg.eeprom_read_int=\u010dten\u00ed \u010d\u00edsel z pam\u011bti EEPROM
bg.eeprom_write_int=z\u00e1pis \u010d\u00edslo do pam\u011bti EEPROM
bg.eeprom_read_long=P\u0159e\u010d\u00edst "long" z pam\u011bti EEPROM
bg.eeprom_write_long=zapsat "long" do pam\u011bti EEPROM
bd.storage=\u00dalo\u017ei\u0161t\u011b
bc.device_address=adresa za\u0159\u00edzen\u00ed
bc.register_address=Registrovat adresu
bc.watchdog_enable=Povolit
bc.eeprom_address=adresa
bc.eeprom_data=data
bc.ln=nov\u00fd \u0159\u00e1dek
bc.message=zpr\u00e1va2
bc.line_number=\u0159\u00e1dek \#
bc.character_number=znak \#


bg.variable_poly=n\u00e1zev prom\u011bnn\u00e9 char
bg.setter_variable_char=nastavit prom\u011bnnou char
bg.char=A
bd.chars=Test znak\u016f
bg.not_equal_poly=\!\=
bg.equal_string\=\ \==
bg.not_equal_string=\!\=
bg.equal_poly\=\ \==
bg.glue_poly=pojidlo
bg.serial_read_poly=p\u0159e\u010d\u00edst s\u00e9riov\u00fd pin
bg.serial_available=s\u00e9riov\u00e9 \u00fadaje k dispozici
bc.setup=nastaven\u00ed
bg.setup=instalace
bc.par=vstup
bc.vecsize=velikost
bc.num=\#
bg.variable_fake=fale\u0161n\u00e9
bg.fake=fale\u0161n\u00e9
bg.variable_vector=pole n\u00e1zev prom\u011bnn\u00e9
bc.position=pozice
bg.create_variable_vector=Vytvo\u0159en\u00ed pole
bg.setter_variable_vector=Deklarace pole
bg.string_equals=rovn\u00e1 se

bg.setter_variable_String=nastavit prom\u011bnnou \u0159et\u011bzce
bg.setter_variable_String.description=nastavit prom\u011bnnou String
bg.variable_String=Prom\u011bnn\u00e1 String
bg.variable_String.description=Prom\u011bnn\u00e1 String
bg.code_loop=smy\u010dka
bg.serial_read=p\u0159e\u010d\u00edst s\u00e9riov\u00fd pin
bd.especial=Bloky k\u00f3du
bc.var=n\u00e1zev prom\u011bnn\u00e9 iterace

# BlockDrawer name
bc.angle=\u00fahel
bc.base=z\u00e1kladn\u00ed
bc.else=ostatn\u00ed
bc.exponent=exponent
bc.from=z
bc.level=\u00farove\u0148
bc.max=maxim\u00e1ln\u011b
bc.min=min
bc.microseconds=mikrosekund
bc.milliseconds=milisekund

# BlockConnector label
bc.pin_number=PIN \#
bc.status=stav
bc.test=test
bc.then=pak
bc.to=do
bc.value=hodnota
bc.variable=Prom\u011bnn\u00e1
bc.frequency=frekvence
bc.do=prove\u010fte
bc.motor_channel=kan\u00e1l motoru
bc.motor_speed=rychlost motoru

bc.scoop_event_flag=Ud\u00e1lost

bd.control=Kontrola
bd.number=Prom\u011bnn\u00e9 a konstanty
bd.operators=Matematick\u00e9 oper\u00e1tory
bd.pins=piny

bd.communication=Komunikace

#linksprite

bd.utilities=Obecn\u00fd Hardware
# BlockGenus initlabel
bg.df_lcd_keypad=LCD kl\u00e1vesy
bg.Tinker_Accmeter=Akcelerometr
bg.Tinker_Button=Tla\u010d\u00edtko
bg.Tinker_Hall=Hala
bg.Tinker_LinearPotentiometer=Line\u00e1rn\u00ed Potentiometr
bg.Tinker_Mosfet=Tranzistor MOSFET
bg.Tinker_Mosfet_pwm=Tranzistor MOSFET
bg.Tinker_Relay=Rel\u00e9
bg.Tinker_RotaryPotentiometer=Rota\u010dn\u00ed Potentiometr
bg.Tinker_Servo=Servo
bg.Tinker_Thermistor=Termistor
bg.Tinker_Tilt=Naklon\u011bn\u00ed
bg.Tinker_Touch=Dotek
bg.abs=abs
bg.addition=+
bg.and=a
bg.cos=cos

bg.scoop_task=\u00daloha sCoop
bg.scoop_loop=SCoop Smy\u010dka
bg.scoop_pin_event=SCoop Ud\u00e1lost
bg.scoop_event_low=Ud\u00e1lost\: n\u00edzk\u00e1
bg.scoop_event_high=Ud\u00e1lost\: vysok\u00e1
bg.scoop_event_falling=Ud\u00e1lost\: klesaj\u00edc\u00ed
bg.scoop_event_rising=Ud\u00e1lost\: rostouc\u00ed

bg.delay=zpo\u017ed\u011bn\u00ed MILLIS
bg.delay_microseconds=zpo\u017ed\u011bn\u00ed MICROS

bg.df_360_degree_rotation_motor=360 stup\u0148ov\u00fd rota\u010dn\u00ed motor
bg.df_adjustable_infrared_sensor_switch=Nastaviteln\u00fd infra\u010derven\u00fd senzor\u00fd sp\u00edna\u010d
bg.df_analog_ambient_light_sensor=Analogov\u00fd senzoru okoln\u00edho sv\u011btla
bg.df_analog_gas_sensor=Analogov\u00fd plynov\u00fd senzor
bg.df_analog_grayscale_sensor=Analogov\u00fd senzor ve stupn\u00edch \u0161edi
bg.df_analog_rotation_sensor_v1=Analogov\u00fd rota\u010dn\u00ed senzor V1
bg.df_analog_rotation_sensor_v2=Analogov\u00fd rota\u010dn\u00ed senzor V2
bg.df_analog_sound_sensor=Analogov\u00fd zvukov\u00fd senzor
bg.df_analog_volume_sensor=Analogov\u00fd senzor hlasitosti zvuku
bg.df_capacitive_touch_sensor=Kapacitn\u00ed dotykov\u00fd sn\u00edma\u010d
bg.df_digital_infrared_motion_sensor=Digit\u00e1ln\u00ed infra\u010derven\u00fd sn\u00edma\u010d pohybu
bg.df_digital_ir_receiver_module=Digit\u00e1ln\u00ed modul IR p\u0159ij\u00edma\u010de
bg.df_digital_push_button=Digit\u00e1ln\u00ed tla\u010d\u00edtko
bg.df_digital_viberation_sensor=Digit\u00e1ln\u00ed prom\u011bnn\u00fd senzor
bg.df_flame_sensor=Senzor ohn\u011b
bg.df_joystick_module_button=Modulov\u00e9 tla\u010d\u00edtko p\u00e1kov\u00e9ho ovlada\u010de
bg.df_joystick_module_x=P\u00e1kov\u00fd ovlada\u010d (osa X)
bg.df_joystick_module_y=P\u00e1kov\u00fd ovlada\u010d (osa Y)
bg.df_led=LED modul
bg.df_led_pwm=LED s jasem
bg.df_line_tracking_sensor=\u0158\u00e1dkov\u00fd sledovac\u00ed senzor
bg.df_mma7260_x=Trojit\u00fd MMA7260 akcelerometr osy (osy X)
bg.df_mma7260_y=Trojit\u00fd MMA7260 akcelerometr osy (osy Y)
bg.df_mma7260_z=Trojit\u00fd MMA7260 akcelerometr osy (osy Z)
bg.df_piranha_led=pira\u0148a LED modul
bg.df_piranha_led_pwm=pira\u0148a LED s jasem
bg.df_pizeo_disk_vibration_sensor=Piezoelektrick\u00fd diskov\u00fd vibra\u010dn\u00ed senzor
bg.df_relay=Rel\u00e9
bg.df_servo=Servo
bg.df_dht11_humidity=Dht11 vlhkost
bg.df_dht11_temperature=Dht11 teplota
bg.df_temperature_sensor=Sn\u00edma\u010d teploty
bg.df_romeo_motors=Romeo motory
bg.df_romeo_motor=Romeo motor
bg.df_romeo_motor_stop=Romeo zastavit motory
bg.df_buzzer=Bzu\u010d\u00e1k
bg.df_buzzer_tone=Bzu\u010d\u00e1k
bg.df_buzzer_tone_delay=Bzu\u010d\u00e1k

bg.df_digital_tilt_sensor=Senzor n\u00e1klonu
bg.df_digital_magnetic_sensor=Magnetick\u00fd senzor
bg.df_analog_co_sensor=Analogov\u00fd senzor oxidu uhelnat\u00e9ho
bg.df_analog_voltage_divider=Analogov\u00fd d\u011bli\u010d nap\u011bt\u00ed
bg.df_analog_mma7361_x=osa-X akcelerometru
bg.df_analog_mma7361_y=osa-Y akcelerometru
bg.df_analog_mma7361_z=osa-Z akcelerometru
bg.df_analog_gp2y0a21=Senzor vzd\u00e1lenosti Sharp GP2Y0A21
bg.df_analog_moisture=\u010cidlo p\u016fdn\u00ed vlhkosti

bg.digital-high=VYSOK\u00c1
bg.digital-low=N\u00cdZK\u00c1
bg.digital-off=VYPNUTO
bg.digital-on=ZAPNUTO
bg.division=\u00f7
bg.false=NEPRAVDA
bg.glue_sb=p\u0159ipevnit
bg.glue_sn=p\u0159ipevnit
bg.greater=>
bg.greater_equal=>\=
bg.if=Pokud
bg.ifelse=Pokud/Jinak
bg.less=<
bg.less_equal=<\=
bg.loop=smy\u010dka
bg.subroutine=podprogram
bg.subroutine-ref=podprogram
bg.map=mapa
bg.map_common=namapovat [0, 1023] na [0, 255]
bg.max=Maxim\u00e1ln\u00ed
bg.message=zpr\u00e1va
bg.millis=millis
bg.min=min
bg.modulo=%
bg.multiplication=x
bg.not=Ne
bg.not_equal=\!\=
bg.number=1
bg.or=nebo
bg.pin-read-analog=analogov\u00fd pin
bg.pin-read-digital=digit\u00e1ln\u00ed pin
bg.pin-read-digital-pullup=input pullup
bg.pin-write-analog=Nastavit analogov\u00fd pin
bg.pin-write-digital=Nastavit digit\u00e1ln\u00ed pin
bg.pow=nap\u00e1jen\u00ed
bg.random=n\u00e1hodn\u00fd
bg.repeat_times=opakovat
bg.seeed_joystick=P\u00e1kov\u00fd palcov\u00fd ovlada\u010d
bg.seeed_joystick_button=Tla\u010d\u00edtko na p\u00e1kov\u00e9m palcov\u00e9m ovlada\u010di


#linksprite
bg.ls_10mmLEDModule=5mm modr\u00fd/zelen\u00fd/\u017elut\u00fd/\u010derven\u00fd LED modul
bg.ls_5mmLEDModule=5mm modr\u00fd/zelen\u00fd/\u017elut\u00fd/\u010derven\u00fd LED modul
bg.ls_AccelerometerModule_x=Akcelerometr modul (osa-x)
bg.ls_AccelerometerModule_y=Akcelerometr modul (osa-y)
bg.ls_AccelerometerModule_z=Akcelerometr modul (osa-z)
bg.ls_ButtonModule=Tla\u010d\u00edtkov\u00fd modul
bg.ls_BuzzerModule=Modul bzu\u010d\u00e1ku
bg.ls_HallSensor=Hall\u016fv senzor
bg.ls_HighPowerLedModule=High Power Led modul
bg.ls_JoystickSensorModule_x=Modul p\u00e1kov\u00e9ho ovlada\u010de (osa-x)
bg.ls_JoystickSensorModule_y=Modul p\u00e1kov\u00e9ho ovlada\u010de (osa-y)
bg.ls_LDRModule=LDR modul
bg.ls_LEDBar=LED P\u00e1s
bg.ls_Linear-SlidePotentiometerModule=Modul line\u00e1rn\u00edho/posuvn\u00e9ho potenciometru
bg.ls_MagneticSwitch=Magnetick\u00fd sp\u00edna\u010d
bg.ls_MosfetModule=MOSFET modul
bg.ls_RelayModule=Rel\u00e9 modul
bg.ls_RotaryPotentiometerModule=Rota\u010dn\u00ed potenciometr modul
bg.ls_RTCModule=RTC modul
bg.ls_SoundSensor=Zvukov\u00fd senzor
bg.ls_ThermalModule=Teplotn\u00ed modul
bg.ls_TiltModule=Senzor n\u00e1klonu
bg.ls_TouchSensorModule=Dotykov\u00fd modul

bg.serial_println=s\u00e9riov\u00e9 println
bg.ir_setport=nastavit IR port
bg.ir_getcode=z\u00edskat k\u00f3d IR
bg.bluno_println=bluno println
bg.bluno_println_number=bluno println
bg.bluno_println_clear=bluno clear
bg.serial_print=serial print
bg.servo=Servo
bg.servo_prefix=Servo\: 
bg.servo_default=V\u00fdchoz\u00ed
bg.servo_sg90=SG90
bg.servo_mg996r=MG996R
bg.setter_variable_digital=nastavit digit\u00e1ln\u00ed prom\u011bnnou
bg.setter_variable_number=nastavit celo\u010d\u00edselnou prom\u011bnnou
bg.setter_variable_number_unsigned_long=nastavit velk\u00e9 cel\u00e9 \u010d\u00edslo prom\u011bnn\u00e9
bg.setter_variable_number_double=Nastavte des\u00edtkovou \u010d\u00edselnou prom\u011bnnou
bg.sin=sin
bg.sqrt=sqrt
bg.subtraction=-
bg.tan=tan
bg.true=pravda
bg.string_equal=rovn\u00e1 se
bg.string_empty=je pr\u00e1zdn\u00fd

bg.ultrasonic=ultrazvukov\u00e9
bg.LCD_I2C_Sainsmart_20by4=20by4 I2C  Sainsmart
bg.LCD_I2C_Sainsmart_16by2=16by2 I2C  Sainsmart
bg.LCD_PLL_Sainsmart_16by2=16by2 PLL Sainsmart
bg.LCD_command_clear=CLEAR
bg.LCD_command_home=HOME
bg.LCD_command_lightOn=Sv\u011btlo zapnuto
bg.LCD_command_lightOff=Sv\u011btlo vypnuto
bg.LCD_command_cursorOn=Kurzor zapnuto
bg.LCD_command_cursorOff=Kurzor vypnuto
bg.LCD_command_blinkOn=Blik\u00e1n\u00ed zapnout
bg.LCD_command_blinkOff=Blik\u00e1n\u00ed vypnout
bg.variable_digital=n\u00e1zev digit\u00e1ln\u00ed prom\u011bnn\u00e9
bg.variable_number=n\u00e1zev celo\u010d\u00edseln\u00e9 prom\u011bnn\u00e9
bg.variable_number_unsigned_long=n\u00e1zev velk\u00e9 celo\u010d\u00edseln\u00e9 prom\u011bnn\u00e9
bg.variable_number_double=n\u00e1zev "Des\u00edtkov\u00e9" prom\u011bnn\u00e9
bg.variable_string=n\u00e1zev \u0159et\u011bzce
bg.while=zat\u00edmco
bg.do_while=Zat\u00edmco
bg.wire_isread=\u010dten\u00ed I2C ok?
bg.wire_read=\u010dten\u00ed z I2C
bg.wire_write=z\u00e1pis do I2C
bg.wire_write_one_byte=I2C zapsat 1
bg.tone=t\u00f3n
bg.tone_time=t\u00f3n
bg.no_tone=\u017e\u00e1dn\u00fd t\u00f3n
bg.xcj_motor_backward=motor shield dozadu
bg.xcj_motor_forward=motor shield vp\u0159ed
bg.xcj_ms_digital_read=Xinchejian digit\u00e1ln\u00ed \u010dten\u00ed
bg.xcj_ms_digital_write=Xinchejian digit\u00e1ln\u00ed z\u00e1pis

bd.logic=Testy

bd.adafruit=Adafruit
bg.ada_dc_motor_fwd=Adafruit DC motor VP\u0158ED
bg.ada_dc_motor_bwd=Adafruit DC motor ZP\u011aT
bg.ada_dc_motor_release=Adafruit DC motor RELEASE
bg.ada_neopixel_NEO_GRB=NEO_GRB
bg.ada_neopixel_NEO_RGB=NEO_RGB
bg.ada_neopixel_NEO_KHZ400=NEO_KHZ400
bg.ada_neopixel_NEO_KHZ800=NEO_KHZ800
bg.ada_neopixel_init=Inicializace
bg.ada_neopixel_pixel_colorGRB=Pixel barvy od 0 do 255 pro ka\u017edou barvu
bg.ada_neopixel_show=P\u0159epnout barevn\u00e1 data na p\u00e1su
bg.ada_neopixel_Brightness=Jas mezi 0 a 255


ardublock.file.suffix=soubor programu Ardublock (*.abp)
ardublock.ui.new=Nov\u00fd
ardublock.ui.save=Ulo\u017eit
ardublock.ui.saveAs=Ulo\u017eit jako
ardublock.ui.load=Otev\u0159\u00edt
ardublock.ui.upload=Nahr\u00e1t do Arduina
ardublock.ui.clone=Vytvo\u0159it kopii
ardublock.ui.add_comment=P\u0159idat koment\u00e1\u0159
ardublock.ui.delete_comment=Odstranit koment\u00e1\u0159
ardublock.ui.organize_blocks=Organizovat v\u0161echny bloky
ardublock.ui.create_refer=vytvo\u0159it odkaz
ardublock.ui.website=P\u0159ej\u00edt na web
ardublock.ui.serialMonitor=Monitor s\u00e9riov\u00e9 linky
ardublock.ui.saveImage=Ulo\u017eit jako obr\u00e1zek...
ardublock.ui.version=21040826 (beta)

ardublock.error_msg.digital_var_slot=Digit\u00e1ln\u00ed variabiln\u00ed slot mus\u00ed m\u00edt jm\u00e9no "digit\u00e1ln\u00ed prom\u011bnn\u00e9". Tip\: Pod\u00edvejte se na zv\u00fdrazn\u011bn\u00fd blok "prom\u011bnn\u00e9"
ardublock.error_msg.number_var_slot=Standardn\u00ed variabiln\u00ed slot mus\u00ed m\u00edt standardn\u00ed celo\u010d\u00edseln\u00fd n\u00e1zev prom\u011bnn\u00e9 . Tip\: Pod\u00edvejte se na zv\u00fdrazn\u011bn\u00fd blok "prom\u011bnn\u00e9"
ardublock.error_msg.double_number_var_slot=variabiln\u00ed slot mus\u00ed m\u00edt "Des\u00edtkov\u00fd" n\u00e1zev prom\u011bnn\u00e9. Tip\: Pod\u00edvejte se na zv\u00fdrazn\u011bn\u00fd blok "prom\u011bnn\u00e9"
ardublock.error_msg.char_var_slot=Char variabiln\u00ed slot mus\u00ed m\u00edt n\u00e1zev ve form\u00e1tu char. Tip\: Pod\u00edvejte se na zv\u00fdrazn\u011bn\u00fd blok "prom\u011bnn\u00e9"
ardublock.error_msg.array_size_slot="Velikost pole" mus\u00ed m\u00edt standardn\u00ed celo\u010d\u00edselnou konstantu

ardublock.translator.exception.subroutineNameDuplicated=dva nebo v\u00edce podprogram\u016f maj\u00ed stejn\u00fd n\u00e1zev\!
ardublock.translator.exception.noLoopFound=\u017d\u00e1dn\u00e9 smy\u010dky nenalezeny\!
ardublock.translator.exception.multipleLoopFound=nalezen blok v\u00edce smy\u010dek\!
ardublock.translator.exception.socketNull=Chyb\u00ed po\u017eadovan\u00e1 hodnota, n\u00e1zev prom\u011bnn\u00e9 nebo 'Test'. Tip\:\: Hledejte pr\u00e1zdn\u00fd "socket" ve zv\u00fdrazn\u011bn\u00e9m bloku.
ardublock.translator.exception.subroutineNotDeclared=podprogram nen\u00ed deklarov\u00e1n

message.title.error=Chyba
message.title.question=Ot\u00e1zka
message.content.open_unsaved=Ardublock program byl zm\u011bn\u011bn, p\u0159ejete si ulo\u017eit?
message.content.overwrite=Chcete p\u0159epsat existuj\u00edc\u00ed soubor?
message.file_not_found=Soubor nebyl nalezen nebo opr\u00e1vn\u011bn\u00ed byla odep\u0159ena
message.question.newfile_on_workspace_changed=Program se zm\u011bnil, p\u0159ejete si vytvo\u0159it nov\u00fd soubor Ardublock?

bc.repeat_times=kr\u00e1t

# Descriptions of all Block

bg.program.description=Hlavn\u00ed program se smy\u010dkou a nastaven\u00edm
bg.loop.description=Hlavn\u00ed Program smy\u010dka bez nastaven\u00ed

bg.scoop_sleep.description=Zpo\u017ed\u011bn\u00ed spu\u0161t\u011bn\u00ed aktu\u00e1ln\u00edho podprocesu x milisekund
bg.scoop_task.description=SCoop podproces smy\u010dka a nastaven\u00ed
bg.scoop_loop.description=SCoop se pouze smy\u010dka
bg.scoop_event_low.description=Ud\u00e1lost aktivovan\u00e1 kdy\u017e je pin LOW
bg.scoop_event_high.description=Ud\u00e1lost aktivovan\u00e1 kdy\u017e je pin HIGH
bg.scoop_event_falling.description=Ud\u00e1lost aktivovan\u00e1 kdy\u017e je pin klesaj\u00edc\u00ed
bg.scoop_event_rising.description=Ud\u00e1lost aktivovan\u00e1 kdy\u017e je pin rostouc\u00ed

bg.delay.description=Delay for "milliseconds" indicated.\nNOTE\: 1000 millis \= 1 second
bg.if.description=Proveden\u00ed p\u0159\u00edkaz\u016f, pokud je "test" pravdiv\u00fd
bg.ifelse.description=Prov\u00e9st prvn\u00ed sadu p\u0159\u00edkaz\u016f, pokud je "test" pravdiv\u00fd, pokud ne provede se druh\u00e1 sada p\u0159\u00edkaz\u016f.
bg.while.description=Vykon\u00e1vat p\u0159\u00edkazy tak dlouho, dokud je "test" pravda
bg.do_while.description=Prov\u00e9st seznam p\u0159\u00edkaz\u016f. Pokud je "Test" pravda, po\u0159\u00e1d opakovat, dokud nebude "test" nepravda
bg.repeat_times.description=Opakovat Xkr\u00e1t p\u0159\u00edkazy.
bg.repeat.description=Opakujte p\u0159\u00edkazy. Zastavit po "Xt\u00e9m" opakov\u00e1n\u00ed. "prom\u011bnn\u00e1" po\u010d\u00edt\u00e1 opakov\u00e1n\u00ed.
bg.break.description=pauza 
bg.subroutine.description=P\u0159idat podprogram
bg.subroutine-ref.description=Vyvol\u00e1n\u00ed podprogramu
bg.delay_microseconds.description=Zpo\u017ed\u011bn\u00ed v "mikrosekund" je uvedeno.  Pozn\u00e1mka\: 1000000 micros \= 1 sekunda
bg.pin-read-analog.description=\u010c\u00edst analogovou hodnotu z pinu
bg.pin-read-digital.description=\u010c\u00edst digit\u00e1ln\u00ed hodnotu z pinu
bg.pin-read-digital-pullup.description=nastavit digit\u00e1ln\u00ed pin na internal pullup
bg.addition.description=Sou\u010det dvou \u010d\u00edsel
bg.subtraction.description=Rozd\u00edl dvou \u010d\u00edsel
bg.multiplication.description=Sou\u010din dvou \u010d\u00edsel
bg.division.description=Pod\u00edl dvou \u010d\u00edsel
bg.random.description=Vygenerovat n\u00e1hodn\u00e9 \u010d\u00edslo men\u0161\u00ed ne\u017e to po\u010det
bg.map_common.description=mapovat hodnoty z [0, 1023] na [0, 255]
bg.greater.description=Pravda, pokud je prvn\u00ed \u010d\u00edslo vy\u0161\u0161\u00ed ne\u017e druh\u00e9 \u010d\u00edslo
bg.less.description=Pravda, pokud je prvn\u00ed \u010d\u00edslo men\u0161\u00ed ne\u017e druh\u00e9 \u010d\u00edslo
bg.equal.description=Pravda, je-li rovno prvn\u00ed \u010d\u00edslo druh\u00e9mu
bg.equal_digital.description=Pravda, je-li rovno prvn\u00ed \u010d\u00edslo druh\u00e9mu
bg.greater_equal.description=Pravda, je-li prvn\u00ed \u010d\u00edslo v\u011bt\u0161\u00ed nebo se rovn\u00e1 druh\u00e9mu \u010d\u00edslu
bg.less_equal.description=Pravda, pokud je prvn\u00ed \u010d\u00edslo men\u0161\u00ed nebo se rovn\u00e1 druh\u00e9mu \u010d\u00edslu
bg.not_equal.description=Pravda, pokud prvn\u00ed \u010d\u00edslo nen\u00ed rovno druh\u00e9mu \u010d\u00edslu
bg.not_equal_digital.description=Pravda, pokud prvn\u00ed \u010d\u00edslo nen\u00ed rovno druh\u00e9mu \u010d\u00edslu
bg.and.description=Pravda, pokud jsou spln\u011bny ob\u011b dv\u011b podm\u00ednky.
bg.or.description=Pravda, pokud jedna nebo ob\u011b dv\u011b podm\u00ednky jsou spln\u011bny.
bg.not.description=Opak
bg.equal_poly.description=Pravda, pokud prvn\u00ed znak odpov\u00edd\u00e1 druh\u00e9ho znaku
bg.not_equal_poly.description=Pravda, pokud prvn\u00ed znak neodpov\u00edd\u00e1 druh\u00e9ho znaku
bg.equal_string.description=Pravda, pokud se prvn\u00ed \u0159et\u011bzec rovn\u00e1 druh\u00e9mu \u0159et\u011bzci
bg.not_equal_string.description=Pravda, pokud se prvn\u00ed \u0159et\u011bzec nerovn\u00e1 druh\u00e9mu \u0159et\u011bzci
bg.string_equal.description=Pravda, pokud jsou dva \u0159et\u011bzce stejn\u00e9
bg.millis.description=v milisekund\u00e1ch od posledn\u00edho zapnut\u00ed nebo vynulov\u00e1n\u00ed. Pozn\u00e1mka\: Pou\u017e\u00edvejte "velkou celo\u010d\u00edselnou" prom\u011bnnou.
bg.string_empty.description=Pravda, pokud \u0159et\u011bzec je pr\u00e1zdn\u00fd
bg.char.description=Znakov\u00e1 konstanta
bg.number_long.description=Velk\u00e1 celo\u010d\u00edseln\u00e1 konstanta. Od 0 do 4,294,967,295
bg.number_double.description="Des\u00edtkov\u00e1" \u010d\u00edseln\u00e1 konstanta. +/-3.4028235E + 38
bg.variable_number.description=Standardn\u00ed celo\u010d\u00edseln\u00e1  prom\u011bnn\u00e1. Od -32 768 do +32,767
bg.variable_number_unsigned_long.description=n\u00e1zev velk\u00e9 celo\u010d\u00edseln\u00e9 prom\u011bnn\u00e9
bg.variable_number_double.description=n\u00e1zev "Des\u00edtkov\u00e9" prom\u011bnn\u00e9
bg.variable_digital.description=Digit\u00e1ln\u00ed prom\u011bnn\u00e1
bg.variable_string.description=Prom\u011bnn\u00e1 String
bg.setter_variable_number.description=Nastavit standardn\u00ed celo\u010d\u00edselnou prom\u011bnnou. Od -32 768 do +32,767
bg.setter_variable_number_unsigned_long.description=Nastavit velkou celo\u010d\u00edslenou prom\u011bnnou. Od 0 do 4 294 967 295
bg.setter_variable_number_double.description=Nastavit "Des\u00edtkovou" prom\u011bnnou. +/-3.4028235E + 38
bg.setter_variable_digital.description=nastavit digit\u00e1ln\u00ed prom\u011bnnou
bg.variable_vector.description=Z\u00edskat hodnotu \u010dlena pole
bg.create_variable_vector.description=Vytvo\u0159it pole standardn\u00edch cel\u00fdch \u010d\u00edsel. Od -32 768 do +32,767
bg.setter_variable_vector.description=Nastavit hodnotu \u010dlena pole
bg.setter_variable_char.description=Nastavit znakovou prom\u011bnnou
bg.variable_poly.description=N\u00e1zev znakov\u00e9 prom\u011bnn\u00e9
bg.servo.description=\u0158\u00edzen\u00ed serva
bg.servo_sg90.description=\u0158\u00edzen\u00ed serva SG90
bg.servo_mg996r.description=\u0158\u00edzen\u00ed serva MG996R
bg.servo_default.description=\u0158\u00edzen\u00ed serva
bg.ultrasonic.description=Ultrazvukov\u00e9 \u010didlo vzd\u00e1lenosti
bg.LCD_I2C_Sainsmart_20by4.description=Sainsmart LCD displej. I2C. 20 char. se 4 linkami
bg.LCD_I2C_Sainsmart_16by2.description=Sainsmart LCD displej. I2C. 16 char. se 2 linkami
bg.LCD_PLL_Sainsmart_16by2.description=Sainsmart LCD displej. Paraleln\u00ed. 16 char. se 2 \u0159\u00e1dky
bg.LCD_command_clear.description=Vy\u010distit LCD displej
bg.tone.description=Generuje obd\u00e9ln\u00edkovou vlnovou specifickou frekvenci (a 50 % pracovn\u00edho cyklu) na pin.
bg.tone_time.description=Generuje obd\u00e9ln\u00edkovou vlnovou specifickou frekvenci (a 50 % pracovn\u00edho cyklu) na pin.
bg.no_tone.description=Zastav\u00ed generov\u00e1n\u00ed \u010dtvercov\u00e9 vlny vyvolan\u00e9 tone().
bg.serial_print.description=Odeslat zpr\u00e1vu p\u0159es s\u00e9riov\u00fd port
bg.message.description=Textov\u00e1 zpr\u00e1va
bg.glue_sn.description=Spojit \u010d\u00edslo se \u0159et\u011bzcem
bg.glue_sb.description=Spojit logickou hodnotu se \u0159et\u011bzcem
bg.glue_poly.description=Spojit znak s \u0159et\u011bzcem
bg.wire_write.description=Zapsat data p\u0159es I2C
bg.wire_read.description=\u010c\u00edst data z i2c
bg.wire_isread.description=Je posledn\u00ed \u010dten\u00ed z I2C \u00fasp\u011b\u0161n\u00e9?
bg.eeprom_read.description=\u010c\u00edst byte (0-255) z pam\u011bti EEPROM. Ka\u017ed\u00fd bajt spot\u0159ebuje jen jednu adresu pam\u011bti EEPROM. Pou\u017eit\u00ed po sob\u011b jdouc\u00edch adres je v po\u0159\u00e1dku
bg.eeprom_write.description=Zapsat bajt (0-255) do pam\u011bti EEPROM. Ka\u017ed\u00fd bajt spot\u0159ebuje jen jednu adresu pam\u011bti EEPROM. Pou\u017eit\u00ed po sob\u011b jdouc\u00edch adres je v po\u0159\u00e1dku
bg.eeprom_read_int.description=P\u0159e\u010d\u00edst int (+/- 32767) z EEPROM. Pozn\u00e1mka\: Ne\u010dtou se po sob\u011b jdouc\u00ed adresy. Ka\u017ed\u00e9 \u010d\u00edslo spot\u0159ebuje 2 adresy v pam\u011bti EEPROM
bg.eeprom_write_int.description=Zapsat int (+/- 32767) do EEPROM. Pozn\u00e1mka\: Ne\u010dtou se po sob\u011b jdouc\u00ed adresy. Ka\u017ed\u00e9 \u010d\u00edslo spot\u0159ebuje 2 adresy v pam\u011bti EEPROM
bg.eeprom_read_long.description=P\u0159e\u010d\u00edst "long" (0 - 4294967295) z EEPROM. Pozn\u00e1mka\: Ne\u010dtou se po sob\u011b jdouc\u00ed adresy. Ka\u017ed\u00e9 \u010d\u00edslo spot\u0159ebuje 4 adresy v pam\u011bti EEPROM
bg.eeprom_write_long.description=Zapsat "long" (0 - 4294967295) do EEPROM. Pozn\u00e1mka\: Nezapisujte po sob\u011b jdouc\u00ed adresy. Ka\u017ed\u00e9 \u010d\u00edslo spot\u0159ebuje 4 adresy v pam\u011bti EEPROM
bg.sd_write2.description=Z\u00e1pis na SD kartu
bg.code_loop.description=P\u0159idat surov\u00fd k\u00f3d do loop()
bg.code_head.description=P\u0159idat surov\u00fd k\u00f3d do hlavy\u010dky
bg.code_setup.description=P\u0159idat surov\u00fd k\u00f3d do setup()
bg.glue_msg.description=P\u0159ipevnit textovou zpr\u00e1vu
bg.variable_fake.description=Digital Var\t\t\t\t
bg.serial_println.description=Odeslat zpr\u00e1vu p\u0159es s\u00e9riov\u00fd port s odpov\u011bd\u00ed
bg.ir_setport.description=Nastavit Port kde je infra\u010derven\u00fd p\u0159ij\u00edma\u010d p\u0159ipojen
bg.ir_getcode.description=Z\u00edskat k\u00f3d z ir p\u0159ij\u00edma\u010de a ulo\u017eit ho do prom\u011bnn\u00e9 string
bg.Tinker_Relay.description=TinkerKit rel\u00e9
bg.Tinker_Button.description=TinkerKit tla\u010d\u00edtko
bg.Tinker_Accmeter.description=TinkerKit Akcelerometr
bg.Tinker_LinearPotentiometer.description=TinkerKit Akcelerometr
bg.Tinker_RotaryPotentiometer.description=TinkerKit oto\u010dn\u00fd potenciometr
bg.Tinker_Thermistor.description=TinkerKit termistor
bg.Tinker_Touch.description=TinkerKit dotykov\u00fd sn\u00edma\u010d
bg.Tinker_Tilt.description=TinkerKit senzor n\u00e1klonu
bg.xcj_motor_forward.description=vp\u0159ed
bg.xcj_motor_backward.description=Moving the car backward
bg.xcj_ms_digital_write.description=Zapisovat digit\u00e1ln\u00ed sign\u00e1l do Socketu
bg.xcj_ms_digital_read.description=p\u0159e\u010d\u00edst digit\u00e1ln\u00ed stav ze Socketu
bg.df_pizeo_disk_vibration_sensor.description=Sn\u00edma\u010d vibrac\u00ed vyrovn\u00e1vac\u00edch piezoelektrick\u00fd m\u011bni\u010d, kter\u00fd reaguje na zm\u011bny nap\u011bt\u00ed generov\u00e1n\u00edm m\u011b\u0159itelnou zm\u011bnu v\u00fdstupn\u00edho nap\u011bt\u00ed, kter\u00e9 je \u00fam\u011brn\u00e9 s\u00edle vibrac\u00ed.
bg.df_analog_ambient_light_sensor.description=Sn\u00edma\u010d okoln\u00edho sv\u011btla. Detekuje sv\u011btelnou hustotu.  
bg.df_analog_grayscale_sensor.description=Analogov\u00fd sn\u00edma\u010d \u0161ed\u00e9. Detekuje stupn\u011b \u0161edi.
bg.df_flame_sensor.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_mma7361_x.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_mma7361_y.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_mma7361_z.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_gp2y0a21.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_moisture.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_temperature_sensor.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_joystick_module_x.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_joystick_module_y.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_mma7260_x.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_mma7260_y.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_mma7260_z.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_rotation_sensor_v1.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_rotation_sensor_v2.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_sound_sensor.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_volume_sensor.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_gas_sensor.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_co_sensor.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_analog_voltage_divider.description=\u010c\u00edst analogovou hodnotu z pinu
bg.df_servo.description=nastavit pin na pwm
bg.df_360_degree_rotation_motor.description=nastavit pin na pwm
bg.df_dht11_humidity.description=z\u00edskat vlhkost od Dht11
bg.df_dht11_temperature.description=z\u00edskat teplotu od Dht11
bg.df_led.description=LED modul
bg.df_led_pwm.description=LED modul
bg.df_piranha_led.description=Piranha LED modul
bg.df_piranha_led_pwm.description=Piranha LED modul s nastaven\u00edm \u00farovn\u011b jasu
bg.df_relay.description=Rel\u00e9 modul
bg.df_buzzer.description=Modul bzu\u010d\u00e1ku
bg.df_buzzer_tone.description=Generuje obd\u00e9ln\u00edkovou vlnovou specifickou frekvenci (a 50 % pracovn\u00edho cyklu) na pin.
bg.df_buzzer_tone_delay.description=Generuje obd\u00e9ln\u00edkovou vlnovou specifickou frekvenci (a 50 % pracovn\u00edho cyklu) na pin.
bg.df_lcd_keypad.description=blok LCD, kter\u00fd pou\u017e\u00edv\u00e1 tekut\u00fd krystal
bg.seeed_joystick.description=P\u0159e\u010d\u00edst si analogovou hodnotu z analogov\u00e9ho pinu
bg.seeed_joystick_button.description=P\u0159e\u010d\u00edst si analogovou hodnotu z analogov\u00e9ho pinu
bg.seeed_o2_sensor=Senzor plynu (O2)
bg.seeed_uv_sensor=UV senzor
bg.seeed_single_gyro=Jednoos\u00e9 analogov\u00e9 Gyro
bg.seeed_mq9_sensor=Senzor plynu (MQ9)
bg.seeed_mp3_sensor=Senzor plynu (MQ3)
bg.seeed_vib_sensor=Piezo sn\u00edma\u010d vibrac\u00ed
bg.seeed_loud_sensor=Senzor hlasitosti
bg.seeed_diff_amp=Diferen\u010dn\u00ed zesilova\u010d
bg.seeed_ir_temp_sensor=Infra\u010derven\u00e9 teplotn\u00ed \u010didlo
bg.seeed_ir_proximity_sensor=80cm infra\u010derven\u00e9 p\u0159ibli\u017eovac\u00ed \u010didlo
bg.seeed_electricity_sensor=Elektrick\u00fd sn\u00edma\u010d
bg.seeed_angle_sensor=Rota\u010dn\u00ed sn\u00edma\u010d \u00fahlu
bg.seeed_sound_sensor=Zvukov\u00fd senzor
bg.seeed_moisture_sensor=Senzor vlhkosti
bg.seeed_temp_sensor=Zvukov\u00fd senzor

bg.seeed_voltage_divider=D\u011bli\u010d nap\u011bt\u00ed
bg.seeed_flame_sensor=\u010cidlo plamene
bg.seeed_button=Tla\u010d\u00edtko
bg.seeed_switch=Sp\u00edna\u010d
bg.seeed_ir_refl_sensor=Infra\u010derven\u00fd reflexn\u00ed senzor
bg.seeed_heart_rate_sensor=U\u0161n\u00ed m\u011b\u0159i\u010d tepov\u00e9 frekvence
bg.seeed_chest_heart_sensor=Hrudn\u00ed popruh ,senzor tepu
bg.seeed_air_quality_sensor=\u010cidlo kvality vzduchu
bg.seeed_line_finder=Line Finder
bg.seeed_pir_motion_sensor=PIR pohybov\u00e9 \u010didlo
bg.seeed_tilt_switch=Sp\u00edna\u010d-n\u00e1klon
bg.seeed_push_button=Tla\u010d\u00edtko
bg.seeed_water_sensor=Senzor vlhkosti
bg.seeed_touch_sensor=Dotykov\u00fd sn\u00edma\u010d
bg.seeed_mag_switch=Magnetick\u00fd sp\u00edna\u010d
bg.seeed_ir_dist_int=IR vzd\u00e1lenost p\u0159eru\u0161ova\u010de

bg.seeed_circle_led=Kruhov\u00e9 LED
bg.seeed_2coil_relay=2 - c\u00edvky bistabiln\u00ed rel\u00e9
bg.seeed_var_led=Variabiln\u00ed barva LED
bg.seeed_vib=Vibra\u010dn\u00ed Motor
bg.seeed_relay=Rel\u00e9

bg.seeed_o2_sensor.description=Grove - Senzor plynu (O\u2082) je druh senzoru k testov\u00e1n\u00ed koncentrace kysl\u00edku ve vzduchu, kter\u00fd je zalo\u017een na principu elektrochemick\u00e9 bu\u0148ky k p\u016fvodn\u00ed pr\u00e1ci. 
bg.seeed_uv_sensor.description=- UV Senzor slou\u017e\u00ed pro detekci intenzity dopadaj\u00edc\u00edho ultrafialov\u00e9ho (UV) z\u00e1\u0159en\u00ed. 
bg.seeed_vib_sensor.description=Piezo sn\u00edma\u010d vibrac\u00ed je vhodn\u00fd pro m\u011b\u0159en\u00ed pru\u017enosti, vibrace, dopad\u016f a doteku. 
bg.seeed_diff_amp.description=Je ur\u010den pro p\u0159esn\u00e9 diferenci\u00e1ln\u00ed vstupn\u00ed zes\u00edlen\u00ed
bg.seeed_ir_temp_sensor.description=Infra\u010derven\u00fd sn\u00edma\u010d teploty k bezkontaktn\u00edmu m\u011b\u0159en\u00ed teploty modelu.
bg.seeed_electricity_sensor.description=Modul \u010didla elekt\u0159iny je zalo\u017een na TA12-200 proudov\u00e9m transform\u00e1toru ,kter\u00fd m\u016f\u017ee m\u011bnit velk\u00fd st\u0159\u00eddav\u00fd proud na malou amplitudu. 
bg.seeed_sound_sensor.description=Modul zvukov\u00e9ho senzoru je jednoduch\u00fd mikrofon. 
bg.seeed_moisture_sensor.description=Tento senzor vlhkosti lze pou\u017e\u00edt k m\u011b\u0159en\u00ed vlhkosti p\u016fdy, nebo k ur\u010den\u00ed zda je voda je voda kolem senzoru, nechte rostliny r\u016fst ve va\u0161\u00ed zahrad\u011b bez va\u0161\u00ed pomoci.
bg.seeed_temp_sensor.description=Sn\u00edma\u010d teploty pou\u017eije termistor, kter\u00fd vrac\u00ed okoln\u00ed teplotu ve form\u011b hodnoty odporu, jen\u017e se pak pou\u017e\u00edv\u00e1 k \u00faprav\u011b Vcc (5V s na\u0161\u00edm Seeeduino). 

bg.seeed_voltage_divider.description=D\u011bli\u010d nap\u011bt\u00ed poskytuje rozhran\u00ed pro m\u011b\u0159en\u00ed vn\u011bj\u0161\u00edch nap\u011bt\u00ed, ani\u017e by bylo nutn\u00e9 p\u0159ipojit odpor na vstupn\u00ed rozhran\u00ed.
bg.seeed_flame_sensor.description=\u010cidlo plamene lze pou\u017e\u00edt k detekci zdroje po\u017e\u00e1ru nebo jin\u00e9ho zdroje sv\u011btla o vlnov\u00e9 d\u00e9lce v rozmez\u00ed 760nm - 1100 nm.
bg.seeed_button.description=Tla\u010d\u00edtko
bg.seeed_switch.description=Sp\u00edna\u010d
bg.seeed_ir_refl_sensor.description=Infra\u010derven\u00fd reflexn\u00ed senzor vyu\u017e\u00edv\u00e1 RPR220 reflexn\u00ed modul pro detekci barvy a vzd\u00e1lenosti.
bg.seeed_heart_rate_sensor.description=Soupravu pro me\u0159en\u00ed srde\u010dn\u00ed frekvence lze pou\u017e\u00edt ke sledov\u00e1n\u00ed srde\u010dn\u00ed frekvence pacienta a sportovce.
bg.seeed_chest_heart_sensor.description=Souprava pro m\u011b\u0159en\u00ed  srde\u010dn\u00ed frekvence lze pou\u017e\u00edt k monitorov\u00e1n\u00ed srde\u010dn\u00edho tepu pacient\u016f a sportovc\u016f, mezit\u00edm se v\u00fdsledek m\u016f\u017ee zobrazit na displeji p\u0159es s\u00e9riov\u00fd port a ulo\u017eit ho pro anal\u00fdzu.
bg.seeed_air_quality_sensor.description=\u010cidlo je ur\u010deno pro testov\u00e1n\u00ed kvality vnit\u0159n\u00edho ovzdu\u0161\u00ed. Hlavn\u00ed je oxid uhelnat\u00fd, alkohol, aceton, \u0159edidla, formaldehyd a dal\u0161\u00ed m\u00edrn\u011b toxick\u00e9 plyny.
bg.seeed_line_finder.description=Vyhled\u00e1va\u010d linky je ur\u010den pro roboty sleduj\u00edc\u00ed linku. Skl\u00e1d\u00e1 se ze dvou \u010d\u00e1st\u00ed - IR emituj\u00edc\u00ed LED a IR citliv\u00fd fototranzistor. Je mo\u017en\u00e9 v\u00fdstupn\u00ed digit\u00e1ln\u00ed sign\u00e1l poslat do mikroprocesoru, tak\u017ee robot m\u016f\u017ee spolehliv\u011b sledovat \u010dernou \u010d\u00e1ru na b\u00edl\u00e9m pozad\u00ed, nebo naopak.
bg.seeed_push_button.description=Tla\u010d\u00edtko
bg.seeed_touch_sensor.description=Um\u00ed detekovat zm\u011bnu kapacity, kdy\u017e je prst bl\u00edzko n\u011bj.
bg.seeed_mag_switch.description=Magnetick\u00fd sp\u00edna\u010d je z\u00e1zrak pro n\u00e1vrh\u00e1\u0159e, kte\u0159\u00ed cht\u011bj\u00ed zapnout nebo vypnout obvod na z\u00e1klad\u011b bl\u00edzkosti.

bg.seeed_circle_led.description=m\u00e1 kv\u011btnat\u00e9 t\u011blo s 24 ovladateln\u00fdch LED diodami.
bg.seeed_2coil_relay.description=Tento modul je zalo\u017een na 2-Coil bistabiln\u00ed rel\u00e9.
bg.seeed_solid_relay.description=Pevn\u00e9 rel\u00e9 je bezkontaktn\u00ed elektronick\u00fd sp\u00ednac\u00ed modul, kter\u00fd m\u00e1 funkce rel\u00e9.

bd.DuinoEDU=DuinoEDU Grove Add
bg.DuinoEDU_infrared=Infra\u010derven\u00fd p\u0159enos
bg.DuinoEDU_infrared.description=Infra\u010derven\u00fd p\u0159enos
bg.DuinoEDU_LCD_I2C_RGB=RGB podsv\u00edcen\u00ed LCD I2C
bg.DuinoEDU_LCD_I2C_RGB.description=RGB podsv\u00edcen\u00ed LCD I2C
bg.DuinoEDU_LCD_I2C_Backlight=Podsv\u00edcen\u00ed LCD I2C
bg.DuinoEDU_LCD_I2C_Backlight.description=Podsv\u00edcen\u00ed LCD I2C
bg.keyboard=kl\u00e1vesnice
bg.keyboard.description=kl\u00e1vesnice
bg.DuinoEDU_Driver_I2C_Forward=Vp\u0159ed
bg.DuinoEDU_Driver_I2C_Forward.description=Ovlada\u010d I2C vp\u0159ed
bg.DuinoEDU_Driver_I2C_Back=Zp\u011bt
bg.DuinoEDU_Driver_I2C_Back.description=Ovlada\u010d I2C zp\u011bt
bg.DuinoEDU_Driver_I2C_Pivoter=Pivote
bg.DuinoEDU_Driver_I2C_Pivoter.description=Driver I2C Pivote
bg.DuinoEDU_Driver_I2C_Speed_A_Motor=Rychlosti A Motoru
bg.DuinoEDU_Driver_I2C_Speed_A_Motor.description=nastavit rychlost motoru mezi 1 a 1000
bg.DuinoEDU_Driver_I2C_Speed_B_Motor=Rychlost B Motoru
bg.DuinoEDU_Driver_I2C_Speed_B_Motor.description=nastavit rychlost motoru mezi 1 a 1000
bg.DuinoEDU_right=Doprava
bg.DuinoEDU_straight=Rovn\u011b
bg.DuinoEDU_left=Vlevo
bg.DuinoEDU_Aix_Acc_mesurerX=mesurerX
bg.DuinoEDU_Aix_Acc_mesurerX.description=mesurerX
bg.DuinoEDU_Aix_Acc_mesurerY=mesurerY
bg.DuinoEDU_Aix_Acc_mesurerY.description=mesurerY
bg.DuinoEDU_Aix_Acc_mesurerZ=mesurerZ
bg.DuinoEDU_Aix_Acc_mesurerZ.description=mesurerZ
bg.DuinoEDU_Aix_Acc_mesurerXYZ=mesurerXYZ
bg.DuinoEDU_Aix_Acc_mesurerXYZ.description=mesurerXYZ
bg.DuinoEDU_Aix_Acc_mesurerVariation=Varianta
bg.DuinoEDU_Aix_Acc_mesurerVariation.description=Varianta
bg.DuinoEDU_Ultrasonic=Ultrazvuk
bg.DuinoEDU_Ultrasonic.description=Ultrazvuk
bg.DuinoEDU_Partie_Emetteur=Vys\u00edla\u010d
bg.DuinoEDU_Partie_Emetteur.description=Vys\u00edla\u010d
bg.DuinoEDU_Partie_Recepteur=P\u0159ij\u00edma\u010d
bg.DuinoEDU_Partie_Recepteur.description=P\u0159ij\u00edma\u010d
bg.DuinoEDU_Rfid_Write=RFID ulo\u017eit k\u00f3d
bg.DuinoEDU_Rfid_Write.description=Ulo\u017eit k\u00f3d v pam\u011bti Ram
bg.DuinoEDU_Rfid_Test=RFID Test
bg.DuinoEDU_Rfid_Test.description=Porovnat k\u00f3d se seznamem v pam\u011bti ram
bg.DuinoEDU_Rfid_Read=\u010cten\u00ed RFID
bg.DuinoEDU_Rfid_Read.description=\u010cten\u00ed odznaku
bg.DuinoEDU_Rfid_Clear=RFID vy\u010distit
bg.DuinoEDU_Rfid_Clear.description=Vy\u010distit seznam k\u00f3d\u016f v pam\u011bti Ram
bg.DuinoEDU_Rfid_Ram_List=RFID Ram seznam
bg.DuinoEDU_Rfid_Ram_List.description=Vytvo\u0159it seznam k\u00f3du v Ram
bg.DuinoEDU_neopixel_init=Neopixel Init
bg.DuinoEDU_neopixel_init.description=Inicializace
bg.DuinoEDU_neopixel_pixel_colorGRB=Neopixel GRB Pixel Color
bg.DuinoEDU_neopixel_pixel_colorGRB.description=Barva pixelu mezi 0 a 1000 pro ka\u017edou barvu
bg.DuinoEDU_neopixel_pixel_colorRGB=Neopixel RGB barva pixelu
bg.DuinoEDU_neopixel_pixel_colorRGB.description=Barva pixelu mezi 0 a 1000 pro ka\u017edou barvu
bg.DuinoEDU_neopixel_Brightness=Neopixel jas

bc.DuinoEDU_serial_display=Zobrazit na seri\u00e1lu
bc.red=\u010cerven\u00e1
bc.blue=Modr\u00e1
bc.green=Zelen\u00e1

bg.ls_10mmLEDModule.description=10mm modr\u00fd/zelen\u00fd/\u017elut\u00fd/\u010derven\u00fd LED modul
bg.ls_5mmLEDModule.description=5mm modr\u00fd/zelen\u00fd/\u017elut\u00fd/\u010derven\u00fd LED modul
bg.ls_AccelerometerModule_x.description=Zalo\u017eeno na vynikaj\u00edc\u00ed ADXL-345, Tento digit\u00e1ln\u00ed 3 os\u00fd akcelerometr m\u00e1 vynikaj\u00edc\u00ed ochranu EMI.
bg.ls_AccelerometerModule_y.description=Zalo\u017eeno na vynikaj\u00edc\u00ed ADXL-345, Tento digit\u00e1ln\u00ed 3 os\u00fd akcelerometr m\u00e1 vynikaj\u00edc\u00ed ochranu EMI.
bg.ls_AccelerometerModule_z.description=Zalo\u017eeno na vynikaj\u00edc\u00ed ADXL-345, Tento digit\u00e1ln\u00ed 3 os\u00fd akcelerometr m\u00e1 vynikaj\u00edc\u00ed ochranu EMI.
bg.ls_ButtonModule.description=Tla\u010d\u00edtkov\u00fd modul
bg.ls_BuzzerModule.description=Modul bzu\u010d\u00e1ku
bg.ls_HighPowerLedModule.description=High Power Led modul
bg.ls_JoystickSensorModule_x.description=Modul p\u00e1kov\u00e9ho ovlada\u010de
bg.ls_JoystickSensorModule_y.description=Modul p\u00e1kov\u00e9ho ovlada\u010de
bg.ls_LDRModule.description=LDR modul
bg.ls_LEDBar.description=LED P\u00e1s
bg.ls_Linear-SlidePotentiometerModule.description=Modul line\u00e1rn\u00edho/posuvn\u00e9ho potenciometru
bg.ls_MagneticSwitch.description=Magnetick\u00fd sp\u00edna\u010d
bg.ls_MosfetModule.description=MOSFET modul
bg.ls_RelayModule.description=Rel\u00e9 modul
bg.ls_RotaryPotentiometerModule.description=Rota\u010dn\u00ed potenciometr modul
bg.ls_RTCModule.description=RTC modul
bg.ls_SoundSensor.description=Zvukov\u00fd senzor
bg.ls_ThermalModule.description=Teplotn\u00ed modul
bg.ls_TiltModule.description=Senzor n\u00e1klonu
bg.ls_TouchSensorModule.description=Modul dotykov\u00e9ho senzoru
bg.random_range.description=Vygenerovat n\u00e1hodn\u00e9 \u010d\u00edslo mezi min a (max - 1)

bd.network=Pr\u00e1ce v s\u00edti

bd.makeblock=Vytvo\u0159it blok

#InsectBot blocks

##iDrawing blocks

#

